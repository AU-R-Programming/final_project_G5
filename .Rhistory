my_lm = function(response, covariates, alpha = 0.05) {
# Make sure data formats are appropriate
response <- as.vector(response)
covariates <- as.matrix(covariates)
# Define parameters
n <- length(response)
p <- dim(covariates)[2]
df <- n - p
# Estimate beta through Eq. (6.1)
beta.hat <- solve(t(covariates)%*%covariates)%*%t(covariates)%*%response
# Estimate of the residual variance (sigma2) from Eq. (6.3)
# Compute residuals
resid <- response - covariates%*%as.matrix(beta.hat)
sigma2.hat <- (1/df)*t(resid)%*%resid
# Estimate of the variance of the estimated beta from Eq. (6.2)
var.beta <- sigma2.hat*solve(t(covariates)%*%covariates)
# Estimate of the confidence interval based on alpha
quant <- 1 - alpha/2
ci.beta <- c(beta.hat - qnorm(p = quant)*sqrt(var.beta), beta.hat +
qnorm(p = quant)*sqrt(var.beta))
# Return all estimated values
return(list(beta = beta.hat, sigma2 = sigma2.hat,
variance_beta = var.beta, ci = ci.beta))
}
class_data <- read.csv("forestfires.csv")
class_data
class_data <- read.csv("forestfires.csv")
beta_hat_func = function(y, x, beta){
return(t(y-x*beta)*(y-x*beta))
}
y<- class_data[,"ISI"]
x<- class_data[,c("temp","wind")]
X<- cbind(1,x)
X
beta_zero<- c(mean(y), cov(y,x[,2])/var(x[,2]), cov(y,x[,3])/var(x[,3]) )
class_data <- read.csv("forestfires.csv")
#Function to minimize to achieve beta estimate
beta_hat_func = function(y, x, beta){
return(t(y-x*beta)*(y-x*beta))
}
#Test data
y<- class_data[,"ISI"]
x<- class_data[,c("temp","wind")]
X<- cbind(1,x)
#initial beta
beta_zero<- c(mean(y), cov(y,x[,2])/var(x[,2]), cov(y,x[,3])/var(x[,3]) )
dimx
dim(x)
x
class_data <- read.csv("forestfires.csv")
#Function to minimize to achieve beta estimate
beta_hat_func = function(y, x, beta){
return(t(y-x*beta)*(y-x*beta))
}
#Test data
y<- class_data[,"ISI"]
x<- class_data[,c("temp","wind")]
x<- cbind(1,x)
#initial beta
beta_zero<- c(mean(y), cov(y,x[,2])/var(x[,2]), cov(y,x[,3])/var(x[,3]) )
beta_zero
beta_hat_func(y,x,beta_zero)
class_data <- read.csv("forestfires.csv")
#Function to minimize to achieve beta estimate
beta_hat_func = function(y, x, beta){
return(t(y-x%*%beta)%*%(y-x%*%beta))
}
#Test data
y<- class_data[,"ISI"]
x<- class_data[,c("temp","wind")]
x<- cbind(1,x)
#initial beta
beta_zero<- c(mean(y), cov(y,x[,2])/var(x[,2]), cov(y,x[,3])/var(x[,3]) )
#make sure beta hat function works for y x and betazero
beta_hat_func(y,x,beta_zero)
class_data <- read.csv("forestfires.csv")
#Function to minimize to achieve beta estimate
beta_hat_func = function(y, x, beta){
return(t(y-x*beta)%*%(y-x*beta))
}
#Test data
y<- class_data[,"ISI"]
x<- class_data[,c("temp","wind")]
x<- cbind(1,x)
#initial beta
beta_zero<- c(mean(y), cov(y,x[,2])/var(x[,2]), cov(y,x[,3])/var(x[,3]) )
#make sure beta hat function works for y x and betazero
beta_hat_func(y,x,beta_zero)
class_data <- read.csv("forestfires.csv")
#Function to minimize to achieve beta estimate
beta_hat_func = function(y, x, beta){
return(as.matrix(t(y-x*beta)%*%(y-x*beta))
}
#Test data
y<- class_data[,"ISI"]
x<- class_data[,c("temp","wind")]
x<- cbind(1,x)
#initial beta
beta_zero<- c(mean(y), cov(y,x[,2])/var(x[,2]), cov(y,x[,3])/var(x[,3]) )
#make sure beta hat function works for y x and betazero
beta_hat_func(y,x,beta_zero)
class_data <- read.csv("forestfires.csv")
#Function to minimize to achieve beta estimate
beta_hat_func = function(y, x, beta){
return((t(y-as.matrix(x)*beta))%*%(y-as.matrix(x)*beta)
}
#Test data
y<- class_data[,"ISI"]
x<- class_data[,c("temp","wind")]
x<- cbind(1,x)
#initial beta
beta_zero<- c(mean(y), cov(y,x[,2])/var(x[,2]), cov(y,x[,3])/var(x[,3]) )
#make sure beta hat function works for y x and betazero
beta_hat_func(y,x,beta_zero)
as.matrix(x)
y-as.matrix(x)*beta
y-as.matrix(x)*beta_zero
t(y-as.matrix(x)*beta_zero))%*%(y-as.matrix(x)*beta_zero)
class_data <- read.csv("forestfires.csv")
#Function to minimize to achieve beta estimate
beta_hat_func = function(y, x, beta){
return((t(y-as.matrix(x)*beta)%*%(y-as.matrix(x)*beta))
}
#Test data
y<- class_data[,"ISI"]
x<- class_data[,c("temp","wind")]
x<- cbind(1,x)
#initial beta
beta_zero<- c(mean(y), cov(y,x[,2])/var(x[,2]), cov(y,x[,3])/var(x[,3]) )
#make sure beta hat function works for y x and betazero
beta_hat_func(y,x,beta_zero)
class_data <- read.csv("forestfires.csv")
#Function to minimize to achieve beta estimate
beta_hat_func = function(y, x, beta){
return((t(y-as.matrix(x)%*%beta)%*%(y-as.matrix(x)%*%beta))
}
#Test data
y<- class_data[,"ISI"]
x<- class_data[,c("temp","wind")]
x<- cbind(1,x)
#initial beta
beta_zero<- c(mean(y), cov(y,x[,2])/var(x[,2]), cov(y,x[,3])/var(x[,3]) )
#make sure beta hat function works for y x and betazero
beta_hat_func(y,x,beta_zero)
beta_hat_func = function(y, x, beta){
return((t(y-as.matrix(x)%*%beta)%*%(y-as.matrix(x)%*%beta))
}
beta_hat_func = function(y, x, beta){
return((t(y-as.matrix(x)%*%beta))%*%(y-as.matrix(x)%*%beta))
}
class_data <- read.csv("forestfires.csv")
#Function to minimize to achieve beta estimate
beta_hat_func = function(y, x, beta){
return((t(y-as.matrix(x)%*%beta))%*%(y-as.matrix(x)%*%beta))
}
#Test data
y<- class_data[,"ISI"]
x<- class_data[,c("temp","wind")]
x<- cbind(1,x)
#initial beta
beta_zero<- c(mean(y), cov(y,x[,2])/var(x[,2]), cov(y,x[,3])/var(x[,3]) )
#make sure beta hat function works for y x and betazero
beta_hat_func(y,x,beta_zero)
